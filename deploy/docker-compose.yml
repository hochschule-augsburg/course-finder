services:
  api:
    build:
      context: ../
      dockerfile: Dockerfile.api
      target: api
    env_file:
      - ./.env
    restart: unless-stopped
    depends_on:
      - database
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=traefik-net' # as api is in two networks, we need to specify the traefik network explicitly

      # API router
      - 'traefik.http.routers.api.rule=Host(`course-finder.informatik.tha.de`)
        && PathPrefix(`/api`)'
      - 'traefik.http.routers.api.priority=10'
      - 'traefik.http.routers.api.entrypoints=websecure'
      - 'traefik.http.routers.api.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.api.service=api'
      - 'traefik.http.services.api.loadbalancer.server.port=2022'
      - 'traefik.http.middlewares.api-ratelimit.ratelimit.average=40'
      - 'traefik.http.middlewares.api-ratelimit.ratelimit.burst=20'
      - 'traefik.http.routers.api.middlewares=api-ratelimit,security-headers,gzip'

      # Stricter rate limit for login endpoint
      - 'traefik.http.routers.api-login.rule=Host(`course-finder.informatik.tha.de`)
        && PathRegexp(`/api/trpc/.*auth\\.login`)'
      - 'traefik.http.routers.api-login.priority=100'
      - 'traefik.http.routers.api-login.entrypoints=websecure'
      - 'traefik.http.routers.api-login.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.api-login.service=api'
      - 'traefik.http.services.api-login.loadbalancer.server.port=2022'
      - 'traefik.http.middlewares.api-login-ratelimit.ratelimit.average=1'
      - 'traefik.http.middlewares.api-login-ratelimit.ratelimit.burst=5'
      - 'traefik.http.routers.api-login.middlewares=api-login-ratelimit,security-headers,gzip'

    networks:
      - traefik-net
      - database

  ui:
    build:
      context: ../
      dockerfile: Dockerfile.ui
      target: ui
      args:
        VITE_API_URL: ${VITE_API_URL}
    depends_on:
      - api
    labels:
      - 'traefik.enable=true'

      # UI router
      - 'traefik.http.routers.ui.rule=Host(`course-finder.informatik.tha.de`)'
      - 'traefik.http.routers.ui.priority=1'
      - 'traefik.http.routers.ui.entrypoints=websecure'
      - 'traefik.http.routers.ui.tls.certresolver=letsencrypt'
      - 'traefik.http.routers.ui.service=ui'
      - 'traefik.http.services.ui.loadbalancer.server.port=80'
      - 'traefik.http.routers.ui.middlewares=security-headers,gzip'

      ## Global middlewares
      # Security Headers
      - 'traefik.http.middlewares.security-headers.headers.stsSeconds=63072000' # 2 years HSTS
      - 'traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains=true'
      - 'traefik.http.middlewares.security-headers.headers.stsPreload=true'
      - 'traefik.http.middlewares.security-headers.headers.accessControlAllowOriginList=https://course-finder.informatik.tha.de'
      # Gzip
      - 'traefik.http.middlewares.gzip.compress=true'

    restart: unless-stopped
    networks:
      - traefik-net

  database:
    image: postgres:17.4-alpine3.21
    env_file:
      - ./.env
    volumes:
      - /var/lib/data:/var/lib/postgresql/data
    ports:
      - '127.0.0.1:5432:5432'
    restart: unless-stopped
    networks:
      - database

networks:
  traefik-net:
    external: true
  database:
    driver: bridge
